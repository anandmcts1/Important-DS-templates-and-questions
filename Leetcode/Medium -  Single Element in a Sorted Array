class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        int n=nums.size();
        if(n==1)
            return nums[0];
        if(nums[0]!=nums[1])
            return nums[0];
        if(nums[n-1]!=nums[n-2])
            return nums[n-1];
        int s=0,e=n-1;    
        while(s<=e)
        {
            int mid=(s+e)/2;
            int len=mid;
            if(nums[mid]!=nums[mid-1] and nums[mid]!=nums[mid+1])
                return nums[mid];
            else if(nums[mid]==nums[mid-1])
            {
                len-=1;
                if(len%2==0)
                    s=mid+1;
                else
                    e=mid-1;
            }
            else
            {
                if(len%2==0)
                    s=mid+1;
                else
                    e=mid-1;
            }
        }
        return 0;
    }
};