class Solution {
public:
    int dp[200][30007];
    bool solve(int id, int sum,vector<int>& nums)
    {
        if(sum==0)
            return true;
        if(sum<0 or id>=nums.size())
            return false;
        if(dp[id][sum]!=-1)
            return dp[id][sum];
        bool x=solve(id+1,sum,nums);
        bool y=solve(id+1,sum-nums[id],nums);
        return dp[id][sum]=x or y;
    }
    bool canPartition(vector<int>& nums) {
        int sum=0;
        memset(dp,-1,sizeof(dp));
        if(nums.size()<=1)
            return false;
        for(auto it:nums)
            sum+=it;
        if(sum%2!=0)
            return false;
        return solve(0,sum/2,nums);
    }
};