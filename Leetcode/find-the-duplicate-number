
//approach 1
class Solution {
    typedef long long int ll;
public:
    int findDuplicate(vector<int>& arr) {
        
        ll slow=arr[0];
        ll fast=arr[0];
        do{
            slow=arr[slow];
            fast=arr[arr[fast]];
        }while(slow!=fast);
        
        slow=arr[0];
       while(slow!=fast)
       {
            slow=arr[slow];
            fast=arr[fast];
       }
        
        return fast;
            
        return 0;
    }
};




//approach 2

class Solution {
    typedef long long int ll;
public:
    int findDuplicate(vector<int>& arr) {
        
        ll n=arr.size();
        for(ll i=0;i<n;i++)
        {
            arr[arr[i]%n]+=n;
        }
        ll mx=0;
        for(ll i=0;i<n;i++)
        {
            if(mx<arr[i])
                mx=arr[i];
        }
        for(ll i=0;i<n;i++)
            if(arr[i]==mx)
                return i;
        return 0;
    }
};
