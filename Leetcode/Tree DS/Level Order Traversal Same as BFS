/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>ss;
        if(root==NULL)
            return ss;
        vector<vector<int>>ans(1000);
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        int mx=0;
        while(!q.empty())
        {
            ans[q.front().second].push_back(q.front().first->val);
            if(q.front().first->left)
            {
                q.push({q.front().first->left,q.front().second+1});
                mx=max(mx,q.front().second+1);
            }
            if(q.front().first->right)
            {
                q.push({q.front().first->right,q.front().second+1});
                mx=max(mx,q.front().second+1);
            }
            q.pop();
        }
        vector<vector<int>>ans2(mx+1);
        for(int i=0;i<=mx;i++)
        {
            for(auto it:ans[i])
                ans2[i].push_back(it);
        }
         return ans2;           
    }
};