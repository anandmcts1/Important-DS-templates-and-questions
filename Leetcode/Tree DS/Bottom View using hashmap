struct Node
{
    int data; //data of the node
    Node *left, *right; //left and right references

    // Constructor of tree node
    Node(int key)
    {
        data = key;
        left = right = NULL;
    }
}; */

map<int,pair<Node*, int>>mp;  //it stores distance from root, address, level

void solve(Node* root,int dist,int level)
{
    if(root==NULL)
    return;
    
    if(mp.find(dist)==mp.end())
    {
        mp[dist]={root,level};
    }
    else{
        if(mp[dist].second<=level)
        mp[dist]={root,level};
    }
    
    solve(root->left,dist-1,level+1);
    solve(root->right,dist+1,level+1);
}

// Method that returns the bottom view.
vector <int> bottomView(Node *root)
{
   // Your Code Here
    mp.clear();
    solve(root,0,0);
    vector<int>ans;
    for(auto it:mp)
    ans.push_back(it.second.first->data);
    return ans;
}

