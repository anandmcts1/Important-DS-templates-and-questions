/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
    typedef int ll;
    
public:
    ListNode* reverseList(ListNode* head) {
        
        if(head==NULL)
            return head;
        
        if(head->next==NULL)
            return head;
        
        ListNode* late=head->next;
        ListNode* prev=head;
        head=prev;
        ListNode* temp=head;
        prev->next=NULL;
        
        
        while(late->next!=NULL)
        {
            temp=late->next;
            
            late->next=prev;
            prev=late;
            late=temp;
            
            
            
        }
            late->next=prev;
        
        
        return late;
    }
};
