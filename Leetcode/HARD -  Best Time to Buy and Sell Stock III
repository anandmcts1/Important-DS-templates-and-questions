class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        int n=prices.size();
        if(n==0)
            return 0;
        int left[n];
        int right[n];
        left[0]=0;
        right[n-1]=0;
        int mn=prices[0];
        for(int i=1;i<n;i++)
        {
            left[i]=max(left[i-1],prices[i]-mn);
            mn=min(mn,prices[i]);
        }
        mn=prices[n-1];
        for(int i=n-2;i>=0;i--)
        {
            right[i]=max(right[i+1],mn-prices[i]);
            mn=max(mn,prices[i]);
        }
        int ans=max(left[n-1],right[0]);
        // for(int i=0;i<n;i++)
        // {
        //     cout<<left[i]<<" "<<right[i]<<endl;
        // }
        for(int i=0;i<n-1;i++)
        {
            ans=max(ans,left[i]+right[i+1]);
        }
        return ans;
        
    }
};
