#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define translow transform(s.begin(),s.end(),s.begin(),::tolower);
#define transup transform(s.begin(),s.end(),s.begin(),::toupper);
#define endl "\n"
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
ll mod=1e9+7;
vector<ll>adj[100005];
ll dist[100005];
ll parent[100005]
ll n,m;
            
            void sssp(ll source)
            {
                memset(dist,-1,sizeof(dist));
		memset(parent,-1,sizeof(parent));
                queue<ll>q;
                q.push(source);
                dist[source]=0;
                while(!q.empty())
                {
                    ll cn=q.front();
                    q.pop();

                    for(auto it:adj[cn])
                    {
                        if(dist[it]==-1)
                        {
			    parent[it]=cn;
                            dist[it]=dist[cn]+1;
                            q.push(it);
                        }
                    }
                }
            }
        


 
int main() {
				        fast
                ll n,m;
                cin>>n>>m;
                for(ll i=0;i<m;i++)
                {
                ll a,b;
                cin>>a>>b;
                adj[a].pb(b);
                adj[b].pb(a);
                }
                sssp(0);
                for(ll i=0;i<=n;i++)
                {
                    cout<<"Dist of node "<<i<<" from node 0 = "<<dist[i]<<endl;
                }
		 ll dest;
                 cin>>dest;
                 vector<ll> path;  
                 path.pb(dest); 
                 while (parent[dest] != -1) 
                 { 
                 path.pb(parent[dest]); 
                 dest = parent[dest]; 
                 } 

                return 0;
            }
