	/**
	*    author:  accesss_denied
	**/
	#include <bits/stdc++.h>
	using namespace std;
	#define int long long int
	#define ff first
	#define ss second
	#define pb push_back
	#define endl "\n"
	#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
	int mod=1e9+7;			
	int inf=1e18;

					int merge(vector<int>& arr, int start,int mid,int end)
					{
						vector<int>arr1;
						for(int i=start;i<=mid;i++)
						arr1.pb(arr[i]);
						vector<int>arr2;
						for(int i=mid+1;i<=end;i++)
						arr2.pb(arr[i]);

						int i=0,j=0;	int ans=0;
						int m=mid-start;
						int n=end-mid-1;
						int point=start;
						while(i<=m and j<=n)
						{
							if(arr1[i]<=arr2[j])
							{
								arr[point++]=arr1[i];
								i+=1;
							}
							else
							{
								arr[point++]=arr2[j];
								j+=1;
								ans+=(mid-(i+start)+1);
							}
						}
						while(i<=m)
						arr[point++]=arr1[i++];
						while(j<=n)
						arr[point++]=arr2[j++];
						return ans;
					}

					int mergesort(vector<int>& arr,int start,int end)
					{
						if(end-start<=0)
						return 0;

						int mid=(start+end)/2;
						int ans=0;
						ans+=mergesort(arr,start,mid);
						ans+=mergesort(arr,mid+1,end);
						
						ans+=merge(arr,start, mid, end);
						return ans;
					}

	int32_t  main() {
				fast
			
				int t;cin>>t;
				while(t--)
				{
    				int n;
    				cin>>n;
    				vector<int>arr(n);
    				for(int i=0;i<n;i++)
    				cin>>arr[i];	
    				cout<<mergesort(arr,0,n-1)<<endl;
    				// for(int i=0;i<n;i++)
    				// cout<<arr[i]<<" ";
                }
				return 0;
			}	



