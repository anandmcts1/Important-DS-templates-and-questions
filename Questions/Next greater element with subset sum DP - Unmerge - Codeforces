#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ff first
#define ss second
#define pb push_back
#define endl "\n"
#define inf 2000000000
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
ll mod=1e9+7;			
	   
int main() {
			fast
			#ifndef ONLINE_JUDGE
			freopen("input.txt","r",stdin);
			freopen("output.txt","w",stdout);
			#endif

			ll t;
			cin>>t;
			while(t--)
			{
				ll n;
                cin>>n;
                n*=2;
                ll arr[n];
                for(ll i=0;i<n;i++)
                cin>>arr[i];

                

                stack<pair<ll,ll>>st;
                st.push({arr[0],0});
                vector<ll>ans(n,-1);
                for(ll i=1;i<n;i++)
                {
                   
                    while(!st.empty() and (arr[i]>st.top().ff))
                    {
                        ans[(st.top().ss)]=i;
                        st.pop();
                        
                    }
                 
                    st.push({arr[i],i});
                   
                }

                
                ll chance=0;
                vector<ll>sum;
                ll i=0;
                while(1)
                {   
                    
                    if(ans[i]==-1)
                    {
                        ll rem=(n-i);
                        sum.pb(rem);
                        break;
                    }
                    else
                    {
                            sum.pb((ans[i]-i));
                            i=ans[i];
                    }
                    
                }   
                ll x=sum.size();
                ll nn=n/2;
                bool dp[x+1][nn+10];
                
                memset(dp,0,sizeof(dp));
                for(ll i=0;i<x;i++) 
                dp[i][0]=1;


                dp[0][sum[0]]=1;
                 for(ll i=1;i<x;i++)
                {
                    for(ll j=1;j<=nn+1;j++)
                    {
                        if(j>=sum[i])
                        {
                            dp[i][j]=max(dp[i-1][j],dp[i-1][j-sum[i]]);
                        }
                        else
                        {
                            dp[i][j]=dp[i-1][j];
                        }
                        
                    }
                }
                
                if(dp[x-1][nn])
                {
                    cout<<"YES"<<endl;
                }
                else
                {
                    cout<<"NO"<<endl;
                }
                
                

			}
			return 0;
		 }	

 
